---
title: "Automatizce ve fyzice: Notebooky"
author: Petr ƒåerm√°k
date: 2024-10-17
format:
  revealjs: 
    output-file: presentation.html
    theme: moon
    multiplex: true
    chalkboard: true
  html:
    output-file: index.html
  ipynb: default
jupyter: python3
execute: 
  echo: true
---

# √övod

## C√≠l hodiny

> In the year 2525
>
> if man is still alive  
> If woman can survive,  
> they may find‚Ä¶  <span class="fragment">your data</span>

. . .

> and check your nfpl242 homework

. . .

> and evaluate all your measurements

# Python√≠ ok√©nko 

## Mro≈æ√≠k

Co udƒõlaj√≠ n√°sleduj√≠c√≠ p≈ô√≠kazy?

```{python}
#| error: true
#| output-location: fragment
print(a)
```

```{python}
#| error: true
#| output-location: fragment
a = None
print(a)
```

```{python}
#| error: true
#| output-location: fragment
print(a = 1)
```

```{python}
#| error: true
#| output-location: fragment
print(a == 1)
```

```{python}
#| error: true
#| output-location: fragment
print(a := 1)
```

## Mro≈æ√≠k

Oper√°tor p≈ô√≠≈ôazen√≠ a vr√°cen√≠ hodnoty, walrus, mro≈æ:

::: {style="margin-top: -20px; font-size: 8em; text-align: center"}

`:=`   ü¶≠ 

:::

## Mro≈æ√≠k

```{python}
#| eval: false
line = file1.readline()
while line:
    print(f"Line: {line}")
    line = file1.readline()
```

. . .

```{python}
#| eval: false
while True:
    line = file1.readline()
    if not line:
        break
    print(f"Line: {line}")
```

. . .

```{python}
#| eval: false
while line := file1.readline():
    print(f"Line: {line}")
```

. . .

```{python}
#| eval: false
for line in file1:
    print(f"Line: {line}")
```


## f-string

- vkl√°d√°n√≠ hodnot do textu a jejich form√°tov√°n√≠
- t≈ôi historick√© mo≈ænosti
  - modulo oper√°tor
  - str.format
  - f-string

## f-string

### Modulo oper√°tor

```{python}
from random import choice
name = "Erwin"
cat_alive = choice(["≈æije", "ne≈æije"])

print("Tohle je %s, jeho koƒçka %s" % (name, cat_alive))
```

## f-string

### str.format

```{python}
from random import choice
name = "Erwin"
cat_alive = choice(["≈æije", "ne≈æije"])

print("Koƒçka %s, chud√°k %s" % (name, cat_alive))
print("Koƒçka {1}, chud√°k {0}".format(name, cat_alive))
```

## f-string

### f-string

```{python}
from random import choice
name = "Erwin"

print(f"{name}ova koƒçka {choice(['≈æije', 'ne≈æije'])}")
```


## f-string

### Ladƒõn√≠

```{python}
name = "Erwin"
print(f"{name = }")
```

### Probl√©my

```{python}
#| error: true
from random import choice
print(f"H√°z√≠m {choice(["pana", "orel"])}")
```

::: {.fragment}
### Jen do verze Python 3.11 
:::

## f-string

 - nov√Ω PEG parser
 - stejn√© uvozovky, lom√≠tka, koment√°≈ôe
 - lep≈°√≠ errory

```{.python}
## Python 3.12

f"{
    f"{
        f"{
            f"{
                f"{
                    f"To se\nhod√≠!"
                }"
            }"
        }"   ## nav√≠c m≈Ø≈æu komentovat
    }"
}"
```

# U≈æiteƒçn√© knihovny

## Regexp

:::: {.columns}

::: {.column width="50%"}

*Teorie*: NTIN071 Automaty a gramatiky

*Praxe*: NSWI177 √övod do Linuxu

*Fyzik*: to bude nƒõco na parsov√°n√≠...

[regex101.com](regex101.com){.fragment}

:::
::: {.column width="50%"}

![](chat-regex.png){.fragment}

:::
::::



## Pandas {.smaller}

::: columns
:::: column

 - dataseries (ds)
   - 1D pole objekt≈Ø stejn√Ωch typ≈Ø
   - m√° jeden index (popisek)
 - dataframe (df)
   - 2D tabulka, obsahuje ds
   - m√° dva indexa (sloupce, ≈ô√°dky)
 - `pd.read_csv()` - mocn√° funkce
 - `df.plot()` - matplotlib, ale i j√≠n√© (plotly)

::::
:::: column

![](df.png){width=100%}

::::
:::

# Reprodukovatelnost

## Virtual environment

- venv

```{.bash}
py -m venv .venv
env\Scripts\activate.bat  
source env/bin/activate
pip freeze > requirements.txt
```

- anaconda

```{.bash}
conda create --prefix env python
conda activate .\env
conda env export > environment.yml
```

- renv

```{.r}
install.packages("renv")
renv::init()
renv::snapshot()
```

# Notebooky

## iPython: Interactive python {.smaller}

### Co to je?

 - Interaktivn√≠ python shell
 - Jde se na nƒõj p≈ôipojit z klienta (web, vscode)
 - Auto-completion, interakce s shellem
 - r≈Øzn√© backendy (cloud)

### Mimo python p≈ô√≠kazy

 - line magic `%timeit`, `%matplotlib`, `%run`
 - cell magic `%%timeit`
 - interakce se shellem `!`

## iPython: p≈ô√≠klady

```{python}
files = !dir /b /a-d  #windows
files = !ls           #linux
print(files)

web = "mff.cuni.cz"
!ping -c 1 $web
```

```{python}
%timeit range(5000)
```

## iPython qtConsole

 - interaktivn√≠ klienta
 - po≈ô√°d vypad√° jako p≈ô√≠kazov√° ≈ô√°dka
 - grafy!!
 - neumo≈æ≈àuje editaci p≈ôedchoz√≠ch cell

`jupyter qtconsole`

## Jupyter, JupyterLab

 - webov√° aplikace, nejen python (JUlia, PYThon, R)
 - Latex, video, tlaƒç√≠tka

`jupyter notebook`

![](nb-workflow.jpg)

## Jupyter: probl√©my {.smaller}

.ipynb je bin√°rn√≠ (obsahuje i v√Ωsledky)

### V√Ωhody

  - jde prohl√≠≈æet bez pythonu
  - integrace v githubu
  - intern√≠ verzov√°n√≠ (revisions)
  - p≈ô√≠stup z webov√©ho prohl√≠≈æeƒçe

### Nev√Ωhody

  - nemus√≠ j√≠t znovu spustit (smazan√° cela)
  - nejde verzovat v gitu
  - p≈ô√≠stup z webov√©ho prohl√≠≈æeƒçe

## VSCode: Jupyter {.smaller}

 - nen√≠ webov√Ω prohl√≠≈æeƒçe
 - linting, etc.
 - search engine, snippets...
 - debugger
 - zabudovan√Ω git
   - ale - > st√°le ipynb
   - ≈ôe≈°en√≠: export do .py souboru
   - trochu ne≈°≈•astn√©
 - vyu≈æit√≠ .py a syntaxe cell:
   - `# %%`
   - nevhodn√© form√°tov√°n√≠
   - podpora markdown

## rMarkdown {.smaller}

form√°t dokumentace a zpracov√°n√≠ textu, spojuje text s k√≥dem (nejen v R)

### V√Ωhody

- Hezk√© form√°tov√°n√≠
- plain text --> verzov√°n√≠ (Git)
- r≈Øzn√© v√Ωstupy (HTML, PDF, ale i presentace, dashboardy...)
- kombinov√°n√≠ jazyk≈Ø

### Nev√Ωhody

 - hodnƒõ zamƒõ≈ôeno na r
 - python ≈ôe≈°en p≈ôes *reticulate* 
 - chyb√≠ iPython engine
 - pomal√©

## quarto

::: columns
:::: column

- **Ultimate solution**
- kombinace v≈°eho co fyzik pot≈ôebuje
- v√Ωborn√° integrace do vscode (run cell)
- cachov√°n√≠, live preview
- visual mode
- v√≠ce na cviƒçen√≠

::::
:::: column

```{.yaml}
image: registry.gitlab.com/quarto-forge/docker/python

pages:
  script:
    - quarto render --execute --to html --output-dir public
  artifacts:
    paths:
      - public
```

::::
:::

# √ökol #0 - bonus

## Zad√°n√≠

 - Mƒõjme obecn√Ω nekonvexn√≠ n-√∫heln√≠k
 - Hypot√©za: 
 
  > Pro zadan√© m existuje takov√Ω obecn√Ω m-√∫heln√≠k, 
  > kter√Ω je n-√∫heln√≠ku opsan√Ω a jeho≈æ plocha je nejmen≈°√≠ mo≈æn√°.

 - Doka≈æte :D
 - Napi≈°te algoritmus pro nalezen√≠ tohoto n-√∫heln√≠ku pro n=<3,10>
 - Testovac√≠ data: `shapes.py`